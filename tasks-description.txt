
МОДУЛЬ 7 ДОМАШНЕЕ ЗАДАНИЕ
есть разметка:
<div>
<div class="colorText">
<button>Button</button>
<p id="paragraph1">I am just paragraph</p>
</div>
<div>
<input/>
</div>
</div>
она же по ссылке ​https://jsfiddle.net/827ex9cc/
1. При клике на кнопку изменить размер шрифта абзаца до 50px.
2. При наведении указателя мыши на кнопку менять текст кнопки на "Наведён
курсор". Если мы указатель уводим, то возвращать изначальный текст кнопки.
Текст, который был там изначально получить в виде переменной из реального
текста кнопки, а не просто написать "Кнопка". Посмотрите в сторону события
'mouseover'
3. Имитируем примитивную проверку правильности ввода email адреса. Для
поля "input" навесить слушатель на событие blur и проверять, если среди
введённых символов нет символа "@", то через alert() вывести
предупреждение, а если символ есть, то ничего не выводим. В идеале, если мы
снова поменяем текст и там не будет @, то опять выводить alert().
Проверку значения символа можно сделать через indexOf или регулярным
выражением.
Также можно воспользоваться событием change - посмотрите, какие условия
его выполнения
4. Через слушатели "focus" и "blur" менять фон input. Например сделать
#69F0AE​ при фокусе и ​#FF8A80​ при потере фокуса.Задания со звёздочкой
5.Есть другая разметка:
<button>BUTTON</button>
При клике на кнопку запускается функция prompt(), которая спрашивает имя
пользователя. После ввода имени, создаётся абзац, в текст которого
записывается имя и этот абзац вставляется ПЕРЕД кнопкой. Если
пользователь ввёл слово "Stop" или "Escape" в любом регистре, то слушатель
события клика по кнопке пропадает.
слушатели событий можете добавлять разными способами: прямо в разметку
через onclick, onfocus, в размету через <script>. Или по-разному, чтобы
закрепить все варианты
для удаления события нужен removeEventListener, погуглите, как он работает
6.Есть такой код
https://jsfiddle.net/kvwnj9pa/
он имитирует кнопку "toggle". Имитирует нормально, но выглядит ужасно.
Необходимо отрефакторить код:
а) разнести код по функциям.
б) сделать универсальный вариант при котором мы можем настраивать цвета,
в которые должен окрашиваться фон (сейчас это только серый) например,
сделать так, что цвет задавался через аргументы и параметры